generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String   @id @default(cuid())
  name      String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(3)
}

model Team {
  id                 String               @id @default(cuid())
  name               String               @unique
  admins             String[]
  collaborators      String[]
  visitors           String[]
  createdAt          DateTime             @default(now()) @map("created_at") @db.Timestamptz(3)
  updatedAt          DateTime             @updatedAt @map("updated_at") @db.Timestamptz(3)
  FundTransactionSet FundTransactionSet[]
}

model FundTransactionSet {
  id              String                   @id @default(cuid())
  fundId          String
  teamId          String
  team            Team                     @relation(fields: [teamId], references: [id])
  status          FundTransactionSetStatus
  FundTransaction FundTransaction[]
  createdAt       DateTime                 @default(now()) @map("created_at") @db.Timestamptz(3)
  updatedAt       DateTime                 @updatedAt @map("updated_at") @db.Timestamptz(3)
}

model FundTransaction {
  id                   String                   @id @default(cuid())
  fundTransactionSetId String
  fundTransactionSet   FundTransactionSet       @relation(fields: [fundTransactionSetId], references: [id])
  date                 DateTime                 @db.Timestamptz(3)
  direction            FundTransactionDirection
  volume               Float
  commission           Float
  createdAt            DateTime                 @default(now()) @map("created_at") @db.Timestamptz(3)
  updatedAt            DateTime                 @updatedAt @map("updated_at") @db.Timestamptz(3)
}

enum FundTransactionSetStatus {
  HOLDING
  CLEARED
}

enum FundTransactionDirection {
  BUY
  SELL
}
